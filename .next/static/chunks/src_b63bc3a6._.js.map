{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/store/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CartItem {\n  id: string\n  title: string\n  price: number\n  image: string\n  quantity: number\n  category?: string\n  slug?: string\n}\n\ninterface CartState {\n  items: CartItem[]\n  totalQuantity: number\n  totalAmount: number\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem: (state, action: PayloadAction<Omit<CartItem, 'quantity'>>) => {\n      const existingItem = state.items.find(item => item.id === action.payload.id)\n      \n      if (existingItem) {\n        existingItem.quantity += 1\n      } else {\n        state.items.push({ ...action.payload, quantity: 1 })\n      }\n      \n      state.totalQuantity += 1\n      state.totalAmount += action.payload.price\n    },\n    \n    removeItem: (state, action: PayloadAction<string>) => {\n      const itemIndex = state.items.findIndex(item => item.id === action.payload)\n      \n      if (itemIndex !== -1) {\n        const item = state.items[itemIndex]\n        state.totalQuantity -= item.quantity\n        state.totalAmount -= item.price * item.quantity\n        state.items.splice(itemIndex, 1)\n      }\n    },\n    \n    updateQuantity: (state, action: PayloadAction<{ id: string; quantity: number }>) => {\n      const item = state.items.find(item => item.id === action.payload.id)\n      \n      if (item) {\n        const quantityDiff = action.payload.quantity - item.quantity\n        state.totalQuantity += quantityDiff\n        state.totalAmount += item.price * quantityDiff\n        item.quantity = action.payload.quantity\n        \n        if (item.quantity <= 0) {\n          const itemIndex = state.items.findIndex(item => item.id === action.payload.id)\n          state.items.splice(itemIndex, 1)\n        }\n      }\n    },\n    \n    clearCart: (state) => {\n      state.items = []\n      state.totalQuantity = 0\n      state.totalAmount = 0\n    },\n  },\n})\n\nexport const { addItem, removeItem, updateQuantity, clearCart } = cartSlice.actions\nexport default cartSlice.reducer\n"],"names":[],"mappings":";;;;;;;AAAA;;AAkBA,MAAM,eAA0B;IAC9B,OAAO,EAAE;IACT,eAAe;IACf,aAAa;AACf;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,SAAS,CAAC,OAAO;YACf,MAAM,eAAe,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAE3E,IAAI,cAAc;gBAChB,aAAa,QAAQ,IAAI;YAC3B,OAAO;gBACL,MAAM,KAAK,CAAC,IAAI,CAAC;oBAAE,GAAG,OAAO,OAAO;oBAAE,UAAU;gBAAE;YACpD;YAEA,MAAM,aAAa,IAAI;YACvB,MAAM,WAAW,IAAI,OAAO,OAAO,CAAC,KAAK;QAC3C;QAEA,YAAY,CAAC,OAAO;YAClB,MAAM,YAAY,MAAM,KAAK,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO;YAE1E,IAAI,cAAc,CAAC,GAAG;gBACpB,MAAM,OAAO,MAAM,KAAK,CAAC,UAAU;gBACnC,MAAM,aAAa,IAAI,KAAK,QAAQ;gBACpC,MAAM,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,QAAQ;gBAC/C,MAAM,KAAK,CAAC,MAAM,CAAC,WAAW;YAChC;QACF;QAEA,gBAAgB,CAAC,OAAO;YACtB,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAEnE,IAAI,MAAM;gBACR,MAAM,eAAe,OAAO,OAAO,CAAC,QAAQ,GAAG,KAAK,QAAQ;gBAC5D,MAAM,aAAa,IAAI;gBACvB,MAAM,WAAW,IAAI,KAAK,KAAK,GAAG;gBAClC,KAAK,QAAQ,GAAG,OAAO,OAAO,CAAC,QAAQ;gBAEvC,IAAI,KAAK,QAAQ,IAAI,GAAG;oBACtB,MAAM,YAAY,MAAM,KAAK,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;oBAC7E,MAAM,KAAK,CAAC,MAAM,CAAC,WAAW;gBAChC;YACF;QACF;QAEA,WAAW,CAAC;YACV,MAAM,KAAK,GAAG,EAAE;YAChB,MAAM,aAAa,GAAG;YACtB,MAAM,WAAW,GAAG;QACtB;IACF;AACF;AAEO,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,GAAG,UAAU,OAAO;uCACpE,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/store/slices/productsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Product {\n  id: string\n  title: string\n  price: number\n  image: string\n  category: string\n  description: string\n  slug: string\n  rating?: number\n  reviews?: number\n  inStock?: boolean\n  tags?: string[]\n}\n\ninterface ProductsState {\n  products: Product[]\n  categories: string[]\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: ProductsState = {\n  products: [],\n  categories: [],\n  loading: false,\n  error: null,\n}\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setProducts: (state, action: PayloadAction<Product[]>) => {\n      state.products = action.payload\n      state.categories = [...new Set(action.payload.map(product => product.category))]\n    },\n    \n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload\n    },\n    \n    setError: (state, action: PayloadAction<string | null>) => {\n      state.error = action.payload\n    },\n    \n    addProduct: (state, action: PayloadAction<Product>) => {\n      state.products.push(action.payload)\n      if (!state.categories.includes(action.payload.category)) {\n        state.categories.push(action.payload.category)\n      }\n    },\n    \n    updateProduct: (state, action: PayloadAction<Product>) => {\n      const index = state.products.findIndex(product => product.id === action.payload.id)\n      if (index !== -1) {\n        state.products[index] = action.payload\n      }\n    },\n    \n    removeProduct: (state, action: PayloadAction<string>) => {\n      state.products = state.products.filter(product => product.id !== action.payload)\n    },\n  },\n})\n\nexport const { \n  setProducts, \n  setLoading, \n  setError, \n  addProduct, \n  updateProduct, \n  removeProduct \n} = productsSlice.actions\n\nexport default productsSlice.reducer\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAuBA,MAAM,eAA8B;IAClC,UAAU,EAAE;IACZ,YAAY,EAAE;IACd,SAAS;IACT,OAAO;AACT;AAEA,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAChC,MAAM;IACN;IACA,UAAU;QACR,aAAa,CAAC,OAAO;YACnB,MAAM,QAAQ,GAAG,OAAO,OAAO;YAC/B,MAAM,UAAU,GAAG;mBAAI,IAAI,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,CAAA,UAAW,QAAQ,QAAQ;aAAG;QAClF;QAEA,YAAY,CAAC,OAAO;YAClB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;QAEA,UAAU,CAAC,OAAO;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;QAEA,YAAY,CAAC,OAAO;YAClB,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,OAAO;YAClC,IAAI,CAAC,MAAM,UAAU,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,QAAQ,GAAG;gBACvD,MAAM,UAAU,CAAC,IAAI,CAAC,OAAO,OAAO,CAAC,QAAQ;YAC/C;QACF;QAEA,eAAe,CAAC,OAAO;YACrB,MAAM,QAAQ,MAAM,QAAQ,CAAC,SAAS,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAClF,IAAI,UAAU,CAAC,GAAG;gBAChB,MAAM,QAAQ,CAAC,MAAM,GAAG,OAAO,OAAO;YACxC;QACF;QAEA,eAAe,CAAC,OAAO;YACrB,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK,OAAO,OAAO;QACjF;IACF;AACF;AAEO,MAAM,EACX,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,aAAa,EACb,aAAa,EACd,GAAG,cAAc,OAAO;uCAEV,cAAc,OAAO","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/store/slices/wishListSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Product } from './productsSlice'\n\ninterface WishListState {\n  items: Product[]\n}\n\nconst initialState: WishListState = {\n  items: [],\n}\n\nconst wishListSlice = createSlice({\n  name: 'wishList',\n  initialState,\n  reducers: {\n    addToWishList: (state, action: PayloadAction<Product>) => {\n      const existingItem = state.items.find(item => item.id === action.payload.id)\n      \n      if (!existingItem) {\n        state.items.push(action.payload)\n      }\n    },\n    \n    removeFromWishList: (state, action: PayloadAction<string>) => {\n      state.items = state.items.filter(item => item.id !== action.payload)\n    },\n    \n    clearWishList: (state) => {\n      state.items = []\n    },\n    \n    toggleWishList: (state, action: PayloadAction<Product>) => {\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id)\n      \n      if (existingItemIndex !== -1) {\n        state.items.splice(existingItemIndex, 1)\n      } else {\n        state.items.push(action.payload)\n      }\n    },\n  },\n})\n\nexport const { \n  addToWishList, \n  removeFromWishList, \n  clearWishList, \n  toggleWishList \n} = wishListSlice.actions\n\nexport default wishListSlice.reducer\n"],"names":[],"mappings":";;;;;;;AAAA;;AAOA,MAAM,eAA8B;IAClC,OAAO,EAAE;AACX;AAEA,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAChC,MAAM;IACN;IACA,UAAU;QACR,eAAe,CAAC,OAAO;YACrB,MAAM,eAAe,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAE3E,IAAI,CAAC,cAAc;gBACjB,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;YACjC;QACF;QAEA,oBAAoB,CAAC,OAAO;YAC1B,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO;QACrE;QAEA,eAAe,CAAC;YACd,MAAM,KAAK,GAAG,EAAE;QAClB;QAEA,gBAAgB,CAAC,OAAO;YACtB,MAAM,oBAAoB,MAAM,KAAK,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAErF,IAAI,sBAAsB,CAAC,GAAG;gBAC5B,MAAM,KAAK,CAAC,MAAM,CAAC,mBAAmB;YACxC,OAAO;gBACL,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;YACjC;QACF;IACF;AACF;AAEO,MAAM,EACX,aAAa,EACb,kBAAkB,EAClB,aAAa,EACb,cAAc,EACf,GAAG,cAAc,OAAO;uCAEV,cAAc,OAAO","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/store/slices/compareSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Product } from './productsSlice'\n\ninterface CompareState {\n  items: Product[]\n  maxItems: number\n}\n\nconst initialState: CompareState = {\n  items: [],\n  maxItems: 4, // Maximum items to compare\n}\n\nconst compareSlice = createSlice({\n  name: 'compare',\n  initialState,\n  reducers: {\n    addToCompare: (state, action: PayloadAction<Product>) => {\n      const existingItem = state.items.find(item => item.id === action.payload.id)\n      \n      if (!existingItem && state.items.length < state.maxItems) {\n        state.items.push(action.payload)\n      }\n    },\n    \n    removeFromCompare: (state, action: PayloadAction<string>) => {\n      state.items = state.items.filter(item => item.id !== action.payload)\n    },\n    \n    clearCompare: (state) => {\n      state.items = []\n    },\n    \n    toggleCompare: (state, action: PayloadAction<Product>) => {\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id)\n      \n      if (existingItemIndex !== -1) {\n        state.items.splice(existingItemIndex, 1)\n      } else if (state.items.length < state.maxItems) {\n        state.items.push(action.payload)\n      }\n    },\n  },\n})\n\nexport const { \n  addToCompare, \n  removeFromCompare, \n  clearCompare, \n  toggleCompare \n} = compareSlice.actions\n\nexport default compareSlice.reducer\n"],"names":[],"mappings":";;;;;;;AAAA;;AAQA,MAAM,eAA6B;IACjC,OAAO,EAAE;IACT,UAAU;AACZ;AAEA,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU;QACR,cAAc,CAAC,OAAO;YACpB,MAAM,eAAe,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAE3E,IAAI,CAAC,gBAAgB,MAAM,KAAK,CAAC,MAAM,GAAG,MAAM,QAAQ,EAAE;gBACxD,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;YACjC;QACF;QAEA,mBAAmB,CAAC,OAAO;YACzB,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO;QACrE;QAEA,cAAc,CAAC;YACb,MAAM,KAAK,GAAG,EAAE;QAClB;QAEA,eAAe,CAAC,OAAO;YACrB,MAAM,oBAAoB,MAAM,KAAK,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YAErF,IAAI,sBAAsB,CAAC,GAAG;gBAC5B,MAAM,KAAK,CAAC,MAAM,CAAC,mBAAmB;YACxC,OAAO,IAAI,MAAM,KAAK,CAAC,MAAM,GAAG,MAAM,QAAQ,EAAE;gBAC9C,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;YACjC;QACF;IACF;AACF;AAEO,MAAM,EACX,YAAY,EACZ,iBAAiB,EACjB,YAAY,EACZ,aAAa,EACd,GAAG,aAAa,OAAO;uCAET,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { combineReducers } from '@reduxjs/toolkit'\n\n// Import reducers\nimport cartReducer from './slices/cartSlice'\nimport productsReducer from './slices/productsSlice'\nimport wishListReducer from './slices/wishListSlice'\nimport compareReducer from './slices/compareSlice'\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  products: productsReducer,\n  wishList: wishListReducer,\n  compare: compareReducer,\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart', 'wishList', 'compare'], // Only persist these reducers\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport const persistor = persistStore(store)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"names":[],"mappings":";;;;AAkCY;AAlCZ;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,MAAM,sIAAA,CAAA,UAAW;IACjB,UAAU,0IAAA,CAAA,UAAe;IACzB,UAAU,0IAAA,CAAA,UAAe;IACzB,SAAS,yIAAA,CAAA,UAAc;AACzB;AAEA,MAAM,gBAAgB;IACpB,KAAK;IACL,SAAA,8JAAA,CAAA,UAAO;IACP,WAAW;QAAC;QAAQ;QAAY;KAAU;AAC5C;AAEA,MAAM,mBAAmB,CAAA,GAAA,wMAAA,CAAA,iBAAc,AAAD,EAAE,eAAe;AAEhD,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;IACT,YAAY,CAAC,uBACX,qBAAqB;YACnB,mBAAmB;gBACjB,gBAAgB;oBAAC,sJAAA,CAAA,QAAK;oBAAE,sJAAA,CAAA,YAAS;oBAAE,sJAAA,CAAA,QAAK;oBAAE,sJAAA,CAAA,UAAO;oBAAE,sJAAA,CAAA,QAAK;oBAAE,sJAAA,CAAA,WAAQ;iBAAC;YACrE;QACF;IACF,UAAU,oDAAyB;AACrC;AAEO,MAAM,YAAY,CAAA,GAAA,oMAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Desktop/masters-clinics-next/src/lib/providers.tsx"],"sourcesContent":["'use client'\n\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from '@/store'\nimport { ReactNode } from 'react'\n\ninterface ProvidersProps {\n  children: ReactNode\n}\n\nexport default function Providers({ children }: ProvidersProps) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        {children}\n      </PersistGate>\n    </Provider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAWe,SAAS,UAAU,EAAE,QAAQ,EAAkB;IAC5D,qBACE,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBACpB,cAAA,6LAAC,iKAAA,CAAA,cAAW;YAAC,SAAS;YAAM,WAAW,wHAAA,CAAA,YAAS;sBAC7C;;;;;;;;;;;AAIT;KARwB","debugId":null}}]
}